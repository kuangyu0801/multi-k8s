sudo: required
services:
  - docker
env:
  global:
    # setting environment variable for image tagging in deploy.sh
    - SHA=$(git rev-parse HEAD)
    # disable promt for gcloud CLI
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
before_install:
# using travis to encrypt json file
  # $ docker run -it -v $(pwd):/app ruby:2.4 sh
  # $ gem install travis
  # $ travis login --github-toke #TOKEN --com
  # $ travis encrypt-file service-account.json -r kuangyu0801/multi-k8s --com
  # delete service-account.json
  - openssl aes-256-cbc -K $encrypted_9f3b5599b056_key -iv $encrypted_9f3b5599b056_iv -in service-account.json.enc -out service-account.json -d
# install google cloud sdk
  - curl https://sdk.cloud.google.com | bash > /dev/null;
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud components update kubectl
  - gcloud auth activate-service-account --key-file service-account.json
  - gcloud config set project multi-k8s-317909
  - gcloud config set compute/zone europe-west1-b
  - gcloud container clusters get-credentials multi-cluster
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker build -t kuangyu0801/react-test -f ./client/Dockerfile.dev ./client

script:
  - docker run -e CI=true kuangyu0801/react-test npm test

# Configure gcp for deployment in gcp console  
  # 1. Set kubectl with current project
    # gcloud config set project multi-k8s-317909
    # gcloud config set compute/zone europe-west1-b
    # gcloud container clusters get-credentials multi-cluster
    # kubectl create secret generic pgpassword --from-literal PGPASSWORD=1234abcd
  # 2. Install nginx with helm
    # Install helm: ref https://helm.sh/docs/intro/install/
      # curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
      # hmod 700 get_helm.sh
      # ./get_helm.sh
    # Install nginx: ref 
      # helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
      # helm install my-release ingress-nginx/ingress-nginx

deploy:
  # Deploy using own script
  provider: script
  script: bash ./deploy.sh
  on:
    branch: feature-k8